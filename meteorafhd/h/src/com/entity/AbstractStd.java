/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Tue May 16 15:56:54 CST 2006 by MyEclipse Hibernate Tool.
 */
package com.entity;

import java.io.Serializable;

/**
 * A class that represents a row in the std table. 
 * You can customize the behavior of this class by editing the class, {@link Std()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractStd 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Integer sid;

    /** The value of the simple sname property. */
    private java.lang.String sname;

    /** The value of the simple addr property. */
    private java.lang.String addr;

    /**
     * Simple constructor of AbstractStd instances.
     */
    public AbstractStd()
    {
    }

    /**
     * Constructor of AbstractStd instances given a simple primary key.
     * @param sid
     */
    public AbstractStd(java.lang.Integer sid)
    {
        this.setSid(sid);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Integer
     */
    public java.lang.Integer getSid()
    {
        return sid;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param sid
     */
    public void setSid(java.lang.Integer sid)
    {
        this.hashValue = 0;
        this.sid = sid;
    }

    /**
     * Return the value of the sname column.
     * @return java.lang.String
     */
    public java.lang.String getSname()
    {
        return this.sname;
    }

    /**
     * Set the value of the sname column.
     * @param sname
     */
    public void setSname(java.lang.String sname)
    {
        this.sname = sname;
    }

    /**
     * Return the value of the addr column.
     * @return java.lang.String
     */
    public java.lang.String getAddr()
    {
        return this.addr;
    }

    /**
     * Set the value of the addr column.
     * @param addr
     */
    public void setAddr(java.lang.String addr)
    {
        this.addr = addr;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof Std))
            return false;
        Std that = (Std) rhs;
        if (this.getSid() == null || that.getSid() == null)
            return false;
        return (this.getSid().equals(that.getSid()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int sidValue = this.getSid() == null ? 0 : this.getSid().hashCode();
            result = result * 37 + sidValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
