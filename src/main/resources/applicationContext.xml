<?xml version="1.0" encoding="ISO-8859-1"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">


	<context:annotation-config />
	<context:component-scan base-package="*" />

	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<!-- SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- TransactionManager  -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
		</property>
	</bean>
	<bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="list*">PROPAGATION_REQUIRED</prop>
				<prop key="load*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="executeUpdate">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="query*">PROPAGATION_REQUIRED</prop>
				<prop key="uniqueResult*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<!-- ========================== PerformanceMonitorInterceptor-->
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator" >
		<property name="beanNames">
			<list>
				<value>*Service</value>
				<value>*Dao</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>performanceMonitorInterceptor</value>
			</list>
		</property>
	</bean>
	<bean name="performanceMonitorInterceptor" class="com.baoz.yx.intercept.spring.PerformanceMonitorInterceptor">
		<property name="enabled" value="true"></property>
	</bean>
	<!-- ========================== -->
	<bean id="commonDao" class="com.baoz.core.dao.impl.CommonDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="yxCommonDao" class="com.baoz.yx.dao.impl.YXCommonDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="commonService" parent="baseTransactionProxy">
		<property name="target">
			<bean class="com.baoz.core.service.impl.CommonService">
				<property name="commonDao" ref="commonDao" />
			</bean>
		</property>
	</bean>
	<bean id="queryService" parent="baseTransactionProxy">
		<property name="target">
			<bean class="com.baoz.core.service.impl.QueryService">
				<property name="commonDao" ref="commonDao" />
			</bean>
		</property>
	</bean>
	<bean id="osCache" class="com.baoz.core.service.impl.OsCacheImp">
		<constructor-arg>
			<value>oscache_up.properties</value>
		</constructor-arg>
	</bean>
	
	<import resource="spring-job.xml"/>
</beans>
